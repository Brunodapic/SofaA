import * as React from 'react';
import { useNavigate } from 'react-router';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import IconButton from '@mui/material/IconButton';
import MenuItem from '@mui/material/MenuItem';
import Menu from '@mui/material/Menu';
import AccountCircle from '@mui/icons-material/AccountCircle';
import Button from '@mui/material/Button';
import loginTracker from '../../util/loginTracker';
import PetsIcon from '@mui/icons-material/Pets';
import { ListItemIcon } from '@mui/material';
import AssignmentIcon from '@mui/icons-material/Assignment';
import FolderIcon from '@mui/icons-material/Folder';
import LogoutIcon from '@mui/icons-material/Logout';
import { Tooltip } from '@material-ui/core';

interface Props {
  loggedIn?: boolean;
  ime: string | undefined;
  prezime: string | undefined;
  roles: UserDTORole[] | undefined;
}

export default function NavBar({ loggedIn = false, ime = '', prezime = '', roles }: Props) {
  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);

  const navigate = useNavigate();
  const isMenuOpen = Boolean(anchorEl);
  const pages = [
    {
      name: 'Udomi Njušku',
      route: '/udomi-njusku'
    },
  ];

  function odjava() {
    loginTracker.logout();
    navigate('/udomi-njusku');
  }

  const handleCloseNavMenu = () => {
    setAnchorEl(null);
  };

  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {
    setAnchorEl(event.currentTarget);
  };

  const menuId = 'primary-search-account-menu';
  const renderMenu = (
    <Menu
      anchorEl={anchorEl}
      id="account-menu"
      open={isMenuOpen}
      onClose={handleCloseNavMenu}
      onClick={handleCloseNavMenu}
      PaperProps={{
        elevation: 0,
        sx: {
          overflow: 'visible',
          filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',
          mt: 1.5,
          '& .MuiAvatar-root': {
            width: 32,
            height: 32,
            ml: -0.5,
            mr: 1,
          },
          '&:before': {
            content: '""',
            display: 'block',
            position: 'absolute',
            top: 0,
            right: 14,
            width: 10,
            height: 10,
            bgcolor: 'background.paper',
            transform: 'translateY(-50%) rotate(45deg)',
            zIndex: 0,
          },
        },
      }}
      transformOrigin={{ horizontal: 'right', vertical: 'top' }}
      anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
    >
      {
        !roles?.includes('CLAN') ? <MenuItem onClick={() => navigate('/mojeZivotinje')}>
          <ListItemIcon>
            <PetsIcon />
          </ListItemIcon>
          Moje Životinje</MenuItem> : null
      }
      <MenuItem onClick={() => navigate('/prijave')}>
        <ListItemIcon>
          <AssignmentIcon />
        </ListItemIcon>
        {roles?.includes('CLAN') ? "Prijave" : "Moje Prijave"}
      </MenuItem>
      {
        roles?.includes('CLAN') || roles?.includes('CUVALICA') ?
          <MenuItem onClick={() => navigate('/zahtjevi')}>
            <ListItemIcon>
              <FolderIcon />
            </ListItemIcon>
            {roles?.includes('CLAN') ? "Zahtjevi" : "Moji Zahtjevi"}</MenuItem>
          : null
      }
      <MenuItem onClick={() => odjava()}>
        <ListItemIcon>
          <LogoutIcon />
        </ListItemIcon>
        ODJAVA
      </MenuItem>
    </Menu>
  );
  return (
    <Box sx={{ flexGrow: 1 }}>
      <AppBar style={{ background: '#0097a7' }} position="static">
        <Toolbar>
          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' }, ml: 8 }}>
            {pages.map((page) => (
              <Button onClick={() => navigate(page.route)}
                key={page.route}

                color="inherit"
                sx={{ my: 2, color: 'white', display: 'block' }}>
                {page.name}
              </Button>
            ))}
          </Box>
          <Box sx={{ flexGrow: 1 }} />
          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>
            {
              loggedIn ?
                <>
                  {
                    roles?.includes('CLAN') ?
                      <>
                        <Button onClick={() => navigate('/korisnici')} color="inherit" sx={{ my: 2, color: 'white', display: 'block' }} >Korisnici</Button>
                      </>
                      :
                      null
                  }
                  <Button onClick={() => navigate('/periodicne-provjere')} color="inherit" sx={{ my: 2, color: 'white', display: 'block' }} >Periodične Provjere</Button>

                  <Tooltip title={ime + " " + prezime}>
                    <IconButton
                      size="large"
                      edge="end"
                      aria-label="account of current user"
                      aria-controls={menuId}
                      aria-haspopup="true"
                      onClick={handleProfileMenuOpen}
                      color="inherit"
                    >
                      <AccountCircle />
                    </IconButton>
                  </Tooltip>

                </>

                :

                <>

                  <Button onClick={() => navigate('/registracija')} color="inherit" sx={{ my: 2, color: 'white', display: 'block' }} >Registracija</Button>
                  <Button onClick={() => navigate('/login')} color="inherit" sx={{ my: 2, color: 'white', display: 'block' }} >Prijava</Button>
                </>
            }

          </Box>
        </Toolbar>
      </AppBar>
      {renderMenu}
    </Box>
  );
}
